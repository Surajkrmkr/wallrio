name: WallRio Build Generation For Android

on:
  push:
    tags: "v*.*.*"

permissions:
  contents: write

jobs:
  build-and-release-wallrio:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH
      - name: Setup Java to compile the project
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Install and setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - run: flutter --version
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Flutter Build Release for Android
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          flutter build apk --release --split-per-abi
          flutter build appbundle --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: WallRio-${{github.ref_name}}.zip
          directory: build/app/outputs/flutter-apk/
      - name: Android Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/app/outputs/flutter-apk/WallRio-${{github.ref_name}}.zip
      - name: Configure Service Account JSON
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
      - name: Upload Release to Play store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.shadowteam.wallrio
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          mappingFile: build/app/outputs/mapping/release/mapping.txt
          debugSymbols: build/app/intermediates/merged_native_libs/release/out/lib
          whatsNewDirectory: distribution/whatsnew
          releaseName: ${{github.ref_name}}
          track: production
          status: completed
          inAppUpdatePriority: 2
